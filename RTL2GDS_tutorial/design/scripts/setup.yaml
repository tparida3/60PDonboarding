%TAG ! tag:design.stylus.cadence.com,0.1:
---
# Generated Using: Innovus 21.14-s109_1
####################################################################################################
# MMMC Config
####################################################################################################
# Flow paramters which relate to multi-mode, multi-corner (mmmc) setup.  The majority of items will
# be consumed in the mmmc_config.tcl file
####################################################################################################

std_cells: ../SiliconJackets/cadence_sky130/sky130_scl_9T_0.0.5
pdk_dir: ../SiliconJackets/cadence_sky130/sky130_release_0.0.4
# Library Sets created using 'create_library_set'
#---------------------------------------------------------------------------------------------------
#   library_sets:
#     <name>:
#       library_files:
#         - <list of library files (.lbd or .lib)>
#     [ link_library_files:
#         - <list of optional link library files (.lbd or .lib)> ]
#     [ target_library_files:
#         - <list of optional target library files (.lbd or .lib)> ]
#     [ socv_files:
#         - <list of optional SOCV variation library files> ]
library_sets:
  ff_v1.98_0C:
    library_files:
      - '[get_flow_config std_cells]/lib/sky130_ff_1.98_0_nldm.lib'
  ss_v1.62_125C:
    library_files:
      - '[get_flow_config std_cells]/lib/sky130_ss_1.62_125_nldm.lib'
  tt_v1.8_25C:
    library_files:
      - '[get_flow_config std_cells]/lib/sky130_tt_1.8_25_nldm.lib'

# Opconds to be created using 'create_opcond' (these are optional MMMC objects)
#---------------------------------------------------------------------------------------------------
#   opconds:
#     <name>:
#       process: <process for the opcond>
#       temperature: <temperature for the opcond>
#       voltage: <voltage for the opcond>
opconds:
#  < PLACEHOLDER: OPCOND NAME >:
#    process: < PLACEHOLDER: OPCOND PROCESS >
#    temperature: < PLACEHOLDER: OPCOND TEMPERATURE >
#    voltage: < PLACEHOLDER: OPCOND VOLTAGE >

# Timing conditions to be created using 'create_timing_condition'
#---------------------------------------------------------------------------------------------------
#   timing_conditions:
#     <name>:
#       library_sets:
#          - <list of library_set objects to associate to the timing_condition>
#     [ opcond: <name of opcond for the timing_condition> ]"
#     [ opcond_library: <name of library to search for the opcond> ]"
timing_conditions:
   ff_v1.98_0C:
    library_sets:
      - ff_v1.98_0C

   ss_v1.62_125C:
    library_sets:
      - ss_v1.62_125C

   tt_v1.8_25C:
    library_sets:
      - tt_v1.8_25C

# RC corners to be created using 'create_rc_corner'
#---------------------------------------------------------------------------------------------------
#   rc_corners:
#     <name>:
#       temperature: <temperature for the rc corner>
#       qrc_tech_file: <path to extraction technology file associated with the rc_corner >
rc_corners:
  Nominal_25C: 
#    cap_table: ../SiliconJackets/cadence_sky130/rtk-typical.captable 
    temperature: 25
    qrc_tech_file: '[get_flow_config pdk_dir]/quantus/extraction/typical/qrcTechFile'


# Delay corners to be created using 'create_delay_corner'
#---------------------------------------------------------------------------------------------------
#   delay_corners:
#     <name>:
#       rc_corner:
#            early: <early rc_corner>
#            late: <late rc_corner>
#       timing_condition:
#            early: <early timing_condition for each power_domain>
#            late: <late timing_condition for each power_domain>
delay_corners:
  tt_v1.8_25C_Nominal_25:
    rc_corner:
      early: Nominal_25C
      late: Nominal_25C
    timing_condition:
      early: tt_v1.8_25C
      late: tt_v1.8_25C
      
  ff_v1.98_0C_Nominal_25:
    rc_corner:
      early: Nominal_25C
      late: Nominal_25C
    timing_condition:
      early: ff_v1.98_0C
      late: ff_v1.98_0C

  ss_v1.62_125C_Nominal_25:
    rc_corner:
      early: Nominal_25C
      late: Nominal_25C
    timing_condition:
      early: ss_v1.62_125C
      late: ss_v1.62_125C

# Constraint modes to be created using 'create_constraint_mode'
#---------------------------------------------------------------------------------------------------
#   constraint_modes:
#     <name>:
#       sdc_files:
#          -  <list of constraint files to associate with the constraint_mode>
#     [ tcl_variables:
#          -  <optional list of TCL variables defined as key/value pairs> ]

constraint_modes:
  func:
    sdc_files:
      - ../gcd_src/base_sdc.sdc

# Analysis views to be created using 'create_analysis_view'
#---------------------------------------------------------------------------------------------------
#   analysis_views:
#     <name>:
#       constraint_mode : <constraint_mode to associate to analysis_view>
#       delay_corner : <delay_corner object to associate to analysis_view>
#       is_setup : <enable analysis_view for setup timing analysis and optimization (true|false) >
#       is_hold : <enable analysis_view for hold timing analysis and optimization (true|false) >
#       is_dynamic : <enable analysis_view for dynamic power analysis and optimization (true|false) >
#       is_leakage : <enable analysis_view for leakage power analysis and optimization (true|false) >
analysis_views:
  tt_v1.8_25C_Nominal_25_func:
    constraint_mode: func
    delay_corner: tt_v1.8_25C_Nominal_25
    is_setup: true
    is_hold: true
    is_dynamic: true
    is_leakage: true

  ff_v1.98_0C_Nominal_25_func:
    constraint_mode: func
    delay_corner: ff_v1.98_0C_Nominal_25
    is_setup: true
    is_hold: true
    is_dynamic: false
    is_leakage: false
    
  ss_v1.62_125C_Nominal_25_func:
    constraint_mode: func
    delay_corner: ss_v1.62_125C_Nominal_25
    is_setup: true
    is_hold: true
    is_dynamic: false
    is_leakage: false    

####################################################################################################
# Tool Config
####################################################################################################
# Flow parameters which relate to design and tool setup.  Majority of items will be consumed in the
# 'init_design' and 'init_<TOOL>' flow_steps.
####################################################################################################

# 'init' related attributes
#---------------------------------------------------------------------------------------------------
# A YAML list of verilog files read in by 'read_netlist' command.
init_netlist_files:
#  - < PLACEHOLDER: LIST OF NETLIST FILES FOR READ_NETLIST >

# A YAML list of lef files or oa libraries read in by 'read_physical' command.
init_physical_files:
  lef_files:
    - '[get_flow_config std_cells]/lef/sky130_scl_9T.tlef'
    - '[get_flow_config std_cells]/lef/sky130_scl_9T.lef'
  oa_ref_libs:
#    - < PLACEHOLDER: LIST OF OA REF LIBS FOR READ_PHYSICAL >
  oa_search_libs:
#    - < PLACEHOLDER: LIST OF OA SEARCH LIBS FOR READ_PHYSICAL >

# A YAML list of power/ground net names used by 'init_design' command.  This is typically not necessary
# when a power_intent file is specified.
init_power_nets:
  - VDD

init_ground_nets:
  - VSS

# Path to power_intent files which are keyed by power_intent type.  These entries will be
# expanded and used by the 'read_power_intent' command.
#   init_power_intent_files:
#     cpf: < power intent file in CPF format >
#     1801: < power intent file in 1801 format >
init_power_intent_files:
  cpf: 
  1801: 

# A YAML list of def files read in during 'init_floorplan' flow_step.  This can include both
# floorplan and DFT related files.
init_def_files:
#  - < PLACEHOLDER: LIST OF DEF FILES FOR READ_DEF >

# Path to floorplan file read in during 'init_floorplan' flow_step.
init_floorplan_file: 

init_floorplan_tcl: 
  - ./scripts/floorplan.tcl

# 'design' related attributes
#---------------------------------------------------------------------------------------------------
# The name of the toplevel module.
design_name: spm

# The process technology node size.  Valid value is an integer.
design_process_node: 130

# The name of process and technology node size used in route related settings.
#design_tech_node: unspecified
#design_tech_node: <TEMPLATE CHANGE FOR DESIGN>

# The flow effort optimization level {express standard extreme}.
design_flow_effort: standard

# The power effort optimization level {none low high}.
design_power_effort: none

# A YAML list of base_cell names which should be marked as dont_use
dont_use_cells:
#  - < PLACEHOLDER: LIST OF DONT_USE BASE_CELLS >

# 'place' related attributes
#---------------------------------------------------------------------------------------------------

# A YAML list of tieoff cell base_cell names.
add_tieoffs_cells:
  - TIEHI
  - TIELO

# The max distance between a tie-cell and the attached  loads should be less than given value.
add_tieoffs_max_distance: 

# The max number of tie-pins a tie-net can drive. A '0' means no-limit.
add_tieoffs_max_fanout: 

# A YAML list of filler cell base_cell names.
add_fillers_cells:
  - FILL1
  - FILL2
  - FILL4
  - FILL8
  - FILL16
  - FILL32
  - FILL64

# 'opt' related attributes
#---------------------------------------------------------------------------------------------------
# The relative effort for leakage and dynamic power optimization in the range [0.0 - 1.0]
opt_leakage_to_dynamic_ratio: 0.5

# Enable or disable RTL clock-gate insertion
lp_insert_clock_gating: true

# The minimum number of attached loads should be greater than given value.
lp_clock_gating_min_flops: 
#< PLACEHOLDER: MIN FANOUT FOR CLOCK GATE >

# The maximum number of attached loads should be less than given value.
lp_clock_gating_max_flops: 
#< PLACEHOLDER: MAX FANOUT FOR CLOCK GATE >

# Controls automatic timing adjustment on clock-gate enable paths { none fixed variable }
lp_clock_gating_auto_path_adjust: 
#variable

# 'cts' related attributes
#---------------------------------------------------------------------------------------------------
# A YAML list of glob patterns for clock buffer cells used in CTS optimization. If none are
# specified, base_cells from library are chosen automatically.  The base_cell's 'dont_touch' status
# is ignored for listed cells.
cts_buffer_cells:
  - CLKBUFX2
  - CLKBUFX4
  - CLKBUFX8

# A YAML list of glob patterns for clock inverter cells used in CTS optimization. If none are
# specified, base_cells from library are chosen automatically.  The base_cell's 'dont_touch' status
# is ignored for listed cells.
cts_inverter_cells:
  - CLKINVX1
  - CLKINVX2
  - CLKINVX4
  - CLKINVX8
# A YAML list of glob patterns for clock gate cells to be inserted and optimized. If none are
# specified, base_cells from library are chosen automatically.  The base_cell's 'dont_touch' status
# is ignored for listed cells.
cts_clock_gating_cells:
  - ICGX1

# A YAML list of glob patterns for clock logic cells used in CTS optimization. If none are
# specified, base_cells from library are chosen automatically.  The base_cell's 'dont_touch' status
# is ignored for listed cells.
cts_logic_cells:
  - CLKAND2X2
  - CLKXOR2X1
  - CLKMX2X2
  - CLKINVX1
  - CLKINVX2
  - CLKINVX4
  - CLKINVX8
# The target skew used for clock tree synthesis. Valid values are: default | auto | ignore | double
# .
cts_target_skew: auto

# The target slew used for clock tree synthesis. This attribute specifies a maximum slew time that
# the clock tree synthesis algorithm will allow in library units.
cts_target_max_transition_time:
  top: 100
  trunk: 100
  leaf: 100  

# 'route' related attributes
#---------------------------------------------------------------------------------------------------
# The names of top and bottom metal layers to use for global and detail routing.
routing_layers:
  top: met5
  bottom: met1

# The base_cell name to use for antenna violation fixing.
#route_design_antenna_cell_name: < PLACEHOLDER: ROUTE DESIGN ANTENNA DIODE BASE_CELL >

# 'timing' related attributes
#---------------------------------------------------------------------------------------------------
# Enable AOCV during timing analysis (may not be enabled if using SOCV).
timing_analysis_aocv: false

# Enable SOCV during timing analysis (may not be enabled if using AOCV).
timing_analysis_socv: false
